/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guis;

import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.dnd.DnDConstants;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetDropEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVPrinter;
import org.apache.commons.csv.CSVRecord;
import org.jsoup.Jsoup;
import packages.DubRemover;


/**
 *
 * @author user
 */
public class OneClickAll extends javax.swing.JPanel {

    /**
     * Creates new form OneClickAll
     */
    public OneClickAll() {
	initComponents();
	jTextField1.setDropTarget(new DropTarget() {
	    @Override
	    public synchronized void drop(DropTargetDropEvent evt) {
		try {
		    evt.acceptDrop(DnDConstants.ACTION_COPY);
		    List<File> droppedFiles = (List<File>) evt.getTransferable().getTransferData(DataFlavor.javaFileListFlavor);
		    jTextField1.setText(droppedFiles.get(0).getAbsolutePath());
		} catch (UnsupportedFlavorException | IOException ex) {
		}
	    }
    	});
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();

        setPreferredSize(new java.awt.Dimension(810, 573));
        setRequestFocusEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("File:");

        jTextField1.setText("Drag a file here");

        jButton1.setText("Select File");

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setTabSize(4);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setText("Start Parsing");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Reset All");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Save Message");

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Remove <html...> and &xyz;");

        jCheckBox2.setSelected(true);
        jCheckBox2.setText("Remove duplicate lines");

        jCheckBox3.setSelected(true);
        jCheckBox3.setText("File has column headers");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                        .addComponent(jTextField1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jCheckBox3))
                    .addComponent(jCheckBox2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox1)
                            .addComponent(jCheckBox3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox2)
                    .addComponent(jButton3))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addContainerGap(23, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    /*
    * Butoni reset, kur klikohet i kthen te gjitha fushat ne
    * gjendjen fillestare "pa vlere".
    */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
	mainFile = null;
	parsedFile = null;
	
	this.jCheckBox1.setSelected(true);
	this.jCheckBox2.setSelected(true);
	this.jCheckBox3.setSelected(true);
	
	this.jTextField1.setText("Drag a file here");
	this.jTextArea1.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    /*
    * Butoni "start parsing", kur klikohet e therret
    * metoden qe e bene parsimin.
    */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
	mainFile = new File(this.jTextField1.getText());
	String[] emriNdaras = ndajeEmrin(mainFile.getName());
	parsedFile = new File(mainFile.getParent()+"\\" + emriNdaras[0] + "_parsed." + emriNdaras[1]);
	
	jTextArea1.append(emriNdaras[0] + "\n");
	jTextArea1.append(emriNdaras[1] + "\n");
	jTextArea1.append(mainFile.getParent());
	jTextArea1.setText("");
	
	if(jCheckBox1.isSelected())
	    try {
		parsing();
	    } catch (IOException ex) {
		JOptionPane.showMessageDialog(this, "There is an error with file!");
	    }
	if(jCheckBox2.isSelected())
	    this.ruajtja();
    }//GEN-LAST:event_jButton2ActionPerformed

    /* 
    * Metoda qe e kryen tere procesin e parsimit.
    */
    private void parsing() throws IOException
    {
	if(!mainFile.isFile() || !mainFile.canRead() || !mainFile.getName().endsWith("csv"))
	{
	    JOptionPane.showMessageDialog(this, "The given file is not correct!");
	    return;
	}
	CSVParser parser;
	try{
	     parser = CSVParser.parse(mainFile, Charset.defaultCharset(), CSVFormat.EXCEL);
	}
	catch(IOException ioe)
	{
	    JOptionPane.showMessageDialog(this, "There is an error with file!");
	    return;
	}
	jTextArea1.append(parsedFile.getPath()+ "\n");
	BufferedWriter bfr = new BufferedWriter(new FileWriter(parsedFile));
	
	CSVPrinter printeri = new CSVPrinter(bfr, CSVFormat.EXCEL);
	
	List<String> str;
	String a;
	
	for (CSVRecord csvRecord : parser) {
	    str = new ArrayList();
	    for(int i=0; i < csvRecord.size(); i++)
	    {
		a = csvRecord.get(i);
		a = Jsoup.parse(a).text();
		str.add(a.trim());
	    }
	    if(str.size() <= 1 && str.get(0).length() < 1){
		//System.out.println("Nuk i printojme rreshtat e thate");
	    }
	    else{
		printeri.printRecord(str);
	    }    
	}
	printeri.close();
	bfr.close();
    }
    
    /*
    * Splits the name of a file ie: example.ext into a String array of two elements
    * "example" and "ext" and returns them as an array.
    */
    private String[] ndajeEmrin(String a)
    {
	int pika = a.lastIndexOf(".");
	String[] arreji = new String[2];
	arreji[0] = a.substring(0, pika);
	arreji[1] = a.substring(pika+1, a.length());
	return arreji;
    }
    
    /*
    * removes duplicate lines
    */
    private void ruajtja()
    {
	File f;
	try{
	    if(jCheckBox1.isSelected())
		f = parsedFile;
	    else
		f = mainFile;
	}
	catch(NullPointerException nui){
	    JOptionPane.showMessageDialog(this, "None of files are given!");
	    return;
	}

	jTextArea1.setText(f.getPath() + " Removing duplicate lines");
	DubRemover dr = new DubRemover();
	boolean hasHeaders = jCheckBox3.isSelected();
	try{
	    dr.NoDubFiles(f.getPath(), parsedFile.getPath(), null, hasHeaders);  
	}
	catch(java.io.IOException ioe){}
	
	if(dr.rreshta_in() == dr.rreshta_out())
	    jTextArea1.append("\nThere where NO duplicates !");
	else
	    jTextArea1.append("\nDuplicates Successfully removed !");
	jTextArea1.append("\nLines in: " + dr.rreshta_in());
	jTextArea1.append("\nLines out: " + dr.rreshta_out());
    }
    
    File mainFile = null;
    File parsedFile = null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
