/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guis;

import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.dnd.DnDConstants;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetDropEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class CheckerJp extends javax.swing.JPanel {

    /**
     * Creates new form DataCounterJp
     */
    public CheckerJp() {
	initComponents();
	jTextField1.setDropTarget(new DropTarget() {
	    @Override
	    public synchronized void drop(DropTargetDropEvent evt) {
		try {
		    evt.acceptDrop(DnDConstants.ACTION_COPY);
		    List<File> droppedFiles = (List<File>) evt.getTransferable().getTransferData(DataFlavor.javaFileListFlavor);
		    jTextField1.setText(droppedFiles.get(0).getAbsolutePath());
		} catch (UnsupportedFlavorException | IOException ex) {
		}
	    }
    	});
	jTextField2.setDropTarget(new DropTarget() {
	    @Override
	    public synchronized void drop(DropTargetDropEvent evt) {
		try {
		    evt.acceptDrop(DnDConstants.ACTION_COPY);
		    List<File> droppedFiles = (List<File>) evt.getTransferable().getTransferData(DataFlavor.javaFileListFlavor);
		    jTextField2.setText(droppedFiles.get(0).getAbsolutePath());
		} catch (UnsupportedFlavorException | IOException ex) {
		}
		ColumnNameComparison();
	    }
    	});
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jCheckBox2 = new javax.swing.JCheckBox();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("File:");

        jTextField1.setPreferredSize(new java.awt.Dimension(313, 20));

        jButton1.setText("Select File");
        jButton1.setName("FileSelectorJB"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Check for duplicates");

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setTabSize(4);
        jTextArea1.setText("Messages will apear here");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setAutoscrolls(false);
        jTextArea1.setSelectionColor(new java.awt.Color(153, 153, 255));
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setText("Check File");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Save Messages");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Check for &xyz;");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Don't check", "Check for both", "Check for any", "Check for <", "Check for >" }));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Check for < or >:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Compare With:");

        jTextField2.setText("Drag a file here");

        jButton3.setText("Compare Headers");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "File1 ColumnHeaders", "File2 ColumnHeaders"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jButton5.setText("Count Data");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(98, 98, 98)
                                .addComponent(jButton1))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jCheckBox2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(98, 98, 98)
                                            .addComponent(jButton2))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(92, 92, 92)
                                            .addComponent(jButton5)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(26, 26, 26))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jCheckBox1)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jCheckBox2))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButton5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
	JFileChooser jfc = new JFileChooser();
	FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV and Text Files", "csv", "txt");
	jfc.setFileFilter(filter);
	int jfci = jfc.showOpenDialog(jTextField1);
	String jfc_pathi;
	if(jfci == JFileChooser.APPROVE_OPTION)
	{
	    jfc_pathi = jfc.getSelectedFile().toString();
	    jTextField1.setText(jfc_pathi);
	}	
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
	// TODO add your handling code here:
	String jfcPathi = jTextField1.getText();
	boolean checkForDuplicates = false;
	boolean checkForHtmlTags = false;
	int checkForGtLn = jComboBox2.getSelectedIndex();
	
	if(jCheckBox1.isSelected())
	    checkForDuplicates = true;
	if(jCheckBox2.isSelected())
	    checkForHtmlTags = true;
	if((checkForDuplicates == false) && (checkForHtmlTags == false) && (checkForGtLn == 0))
	    return;
	
	String message = "Report for file: "+jfcPathi.substring(jfcPathi.lastIndexOf("\\")+1);
	message += "\n";
	
	packages.DubChecker fc = new packages.DubChecker();
	try {
	     fc.NoDubFiles(jfcPathi);
	} catch (IOException ex) {
	     //Logger.getLogger(CheckerJp.class.getName()).log(Level.SEVERE, null, ex);
	    JOptionPane.showMessageDialog(this, "No correct file given! ");
	    return;
	}
	
	if(checkForDuplicates)
	{
	    int total = fc.returnAllLines();
	    int unique = fc.returnUniqueLines();
	    message += "Total Lines: " +total+"\n";
	    message += "Total Unique Lines: " +unique+ "\n";
	    if(total == unique)
		message += "File has no douplicate lines :)\n";
	    else
		message += "File HAS DOUPLICATE LINES !! \n";
	}
	if(checkForHtmlTags)
	{
	    packages.CsvReader csvR = new packages.CsvReader(jfcPathi);
	    BufferedReader bfr = null;
	    try{
		bfr = new BufferedReader(new FileReader(csvR.returnFile()));
		String line;
		int nr = 1;
		String pattern = "&#?\\w+;";
		while((line = bfr.readLine()) != null){
		    java.util.regex.Pattern r = java.util.regex.Pattern.compile(pattern);
		    java.util.regex.Matcher m = r.matcher(line);
		    if(m.find()){
			message += "found '"+ m.group(0) + "' at line " + nr + "\n";
		    }
		    nr++;
		}
	    }
	    catch(IOException  ioe){
		JOptionPane.showMessageDialog(this, "Wrong File in the input box!");
		return;
	    }
	    finally{
		try{
		    if(bfr != null)
			bfr.close();
		}
		catch(IOException ioe){}
	    }
	}
	
	// check for < or >
	if(checkForGtLn > 0)
	{
	    packages.CsvReader csvR = new packages.CsvReader(jfcPathi);
	    try{
		BufferedReader bfr = new BufferedReader(new FileReader(csvR.returnFile()));
		String line;
		int nr = 1;
		String pattern = "";
		if(checkForGtLn == 1)
		    pattern = "<.*?>";
		if(checkForGtLn == 2)
		    pattern = "<|>";
		if(checkForGtLn == 3)
		    pattern = "<";
		if(checkForGtLn == 4)
		    pattern = ">";
		
		int count = 1;
		while((line = bfr.readLine()) != null){
		    java.util.regex.Pattern r = java.util.regex.Pattern.compile(pattern);
		    java.util.regex.Matcher m = r.matcher(line);
		    if(m.find()){
			message += "found '"+ m.group(0) + "' at line " + nr + "\n";
			count++;
			if(count > 100)
			    break;
		    }
		    nr++;
		}
		bfr.close();
	    }
	    catch(IOException  ioe){
		JOptionPane.showMessageDialog(this, "Wrong File in the input box!");
		return;
	    }   
	}
	
	   
	// this should be the very last line
	jTextArea1.setText(message);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
	String[] lines = jTextArea1.getText().split("\n");
	JFileChooser jfc1 = new JFileChooser();
	FileNameExtensionFilter filter = new FileNameExtensionFilter("Text File", "txt");
	jfc1.setFileFilter(filter);
	int a = jfc1.showSaveDialog(this);
	if(a == JFileChooser.APPROVE_OPTION)
	{
	    String emri = jfc1.getSelectedFile().toString();
	    if(!emri.endsWith(".txt"))
		emri += ".txt";
	    
	    BufferedWriter writer;
	    try {
		File f = new File(emri);
		if(f.isFile()){
		    int jop = JOptionPane.showConfirmDialog(this, "File " + f.getName() + " already exists !"
			    + "\nDo you want to overwrite it ?");
		    if(jop != JOptionPane.OK_OPTION){
			return;
		    }
		}
		writer = new BufferedWriter(new FileWriter(f));
		//writer.write(text);
		for(String line: lines)
		{
		    writer.write(line);
		    writer.newLine();
		}
		writer.close();
	    } catch (IOException ex) {
		//Logger.getLogger(CheckerJp.class.getName()).log(Level.SEVERE, null, ex);
	    } 
	}
    }//GEN-LAST:event_jButton4ActionPerformed

    private void ColumnNameComparison()
    {
	String path1 = jTextField1.getText();
	String path2 = jTextField2.getText();
	String headers1, headers2; 
	try{
	    BufferedReader bfr1 = new BufferedReader(new FileReader(path1));
	    BufferedReader bfr2 = new BufferedReader(new FileReader(path2));
	    headers1 = bfr1.readLine();
	    headers2 = bfr2.readLine();
	    bfr1.close();
	    bfr2.close();
	}
	catch(IOException ioec){
	    JOptionPane.showMessageDialog(this, "Files are note given properly");
	    return;
	}
	packages.CsvReader csvr = new packages.CsvReader();
	ArrayList<String> headerat1 = csvr.lineSplitter(headers1);
	ArrayList<String> headerat2 = csvr.lineSplitter(headers2);	
	
	packages.MyTableCellRenderer renderer = new packages.MyTableCellRenderer();
	jTable1.setDefaultRenderer(Object.class, renderer);
	jTable1.repaint();
	
	DefaultTableModel modeli = new DefaultTableModel();
	modeli.addColumn("File1", headerat1.toArray());
	modeli.addColumn("File2", headerat2.toArray());
	jTable1.setModel(modeli);
	
	boolean hasErrors = false;
	for(int e = 0; e < jTable1.getRowCount(); e++)
	{
	    String s1, s2;
	    try{
		s1 = jTable1.getValueAt(e, 0).toString();
	    }
	    catch(java.lang.NullPointerException jln){
		s1 = " ";
	    }
	    try{
		s2 = jTable1.getValueAt(e, 1).toString();
	    }
	    catch(java.lang.NullPointerException jln){
		s2 = " ";
	    }
	    if(!s1.equals(s2)){
		hasErrors = true;
	    }	    
	}
	jTable1.repaint();
//	if(hasErrors == false)
//	    JOptionPane.showMessageDialog(this, "Column names are SAME :)");
//	else
//	    JOptionPane.showMessageDialog(this, "Column names are NOT same :(");
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        ColumnNameComparison();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
	String pathi = jTextField1.getText();
	File f = new File(pathi);
	if(!f.isFile()){
	    JOptionPane.showMessageDialog(this, "No proper file selected!");
	    return;
	}
	javax.swing.JFrame korniza = new javax.swing.JFrame("Data Counter");
	korniza.setDefaultCloseOperation(javax.swing.JFrame.DISPOSE_ON_CLOSE);
	korniza.setResizable(false);
	korniza.setSize(413, 500);
	korniza.setLocation(300, 150);
	//korniza.setLayout(javax.swing.BoxLayout(this, 1));
	try{
	    korniza.add(new guis.DataCounterJp(jTextField1.getText()));
	}
	catch(IOException ioe){
	    //System.out.println(ioe.toString());
	}
	korniza.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed
    public String path1(){
	return jTextField1.getText();
    } 
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
